[build-system]
requires = ["poetry-core>=2.0"]
build-backend = "poetry.core.masonry.api"

[project]
name = "athreading"
version = "0.2.1"
description = "Asynchronous threading package for Python"
readme = "README.md"
requires-python = ">=3.9"
license = "BSD-3-Clause"
authors = [
    { name = "Callan Gray", email = "cal.j.gray@gmail.com" }
]
keywords = []
dynamic = [ "classifiers" ]

[project.urls]
repository = "https://github.com/calgray/athreading.git"
homepage = "https://github.com/calgray/athreading"

[tool.poetry]
packages = [
    { include = "athreading", from = "src" }
]
classifiers = [
    "Framework :: AsyncIO",
]

[tool.poetry.group.test.dependencies]
pytest = ">=7,<9"
pytest-cov = ">=4,<7"
pytest-mypy = "^0.10.0"
pytest-mock = "^3.14.0"
pytest-asyncio = ">=0.20.3,<0.26.0"
pytest-benchmark = "^5.1.0"
isort = ">=5.10.1,<7.0.0"
pre-commit = ">=3.0.4,<5.0.0"
black = ">=23.1,<26.0"
flake8 = ">=6"
flake8-docstrings = "^1.6.0"
flake8-pyproject = ">=1.2.2"
threaded = "^4.2.0"

[tool.mypy]
disallow_any_explicit = true
disallow_any_generics = true
warn_unreachable = true
warn_unused_ignores = true
disallow_untyped_defs = true
exclude = [".venv/"]
ignore_missing_imports = false

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.flake8]
max-line-length = 99
exclude = [
    'tests/*'
]
extend-ignore = [
    'E203',
    'D200', # One-line docstring should fit on one line with quotes
    'D205', # 1 blank line required between summary line and description
    'D415', # First line should end with a period, question mark, or exclamation point
    'D105', # Missing docstring in magic method
    # D1,  # Uncomment to disable enforcing docstrings
]
required-plugins = [
    'flake8-docstring'
]
docstring-convention = 'google'
# per-file-ignores =
#     tests/*:D100,D104  # Uncomment to disable enforcing module-level docstring in tests/


[tool.isort]
profile = "black"

[tool.pytest.ini_options]
addopts = [
    "-v",
    "-p",
    "no:warnings",
    # "--cov=athreading",
    # "--cov-report=html",
    "--doctest-modules",
    "--benchmark-disable",
    "--ignore=athreading/__main__.py"
]
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.report]
exclude_lines = [
    "pragma: not covered",
    "@overload",
    "if TYPE_CHECKING",
]

[tool.ruff]
target-version = "py39"
line-length = 99

[tool.ruff.lint.isort]
known-local-folder = ["src"]
known-first-party = ["realtime.calibration", "tests"]
known-third-party = ["realtime.receive.core", "realtime.receive.modules", "realtime.receive.processors"]

[tool.ruff.format]
skip-magic-trailing-comma = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D",  # Docstring
    "ANN",  # Require annotations
    "UP",  # Upgrade
    "S101",  # use of assert
    "RSE102",  # paren on raise exception
    "PGH003",  # Use specific rule codes when ignoring type issues
    "COM812",  # Trailing comma missing
    "TC001",  # Move application import to type-checking block
    "TC002",  # Typing only third party import
    "TC003",  # Move standard library import to type-checking block
    "TD003",  # Missing issue link for this TODO
    "FIX002",  # Line contains TODO, consider resolving the issue
]

[tool.ruff.lint.extend-per-file-ignores]
"tests/*" = [
    "PLR",  # magic values
    "FBT001",  # boolean-typed positional arguments
    "B011",  # Do not `assert False`
]
